<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="30516">
	<Model name="WUShoulderModel_S2M_box_lifting">
		<defaults>
			<Thelen2003Muscle name="default">
				<!--The set of points defining the path of the actuator.-->
				<GeometryPath>
					<!--Default appearance attributes for this GeometryPath-->
					<Appearance>
						<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
						<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
					</Appearance>
				</GeometryPath>
				<!--Maximum isometric force that the fibers can generate-->
				<max_isometric_force>546</max_isometric_force>
				<!--Optimal length of the muscle fibers-->
				<optimal_fiber_length>0.053499999999999999</optimal_fiber_length>
				<!--Resting length of the tendon-->
				<tendon_slack_length>0.078</tendon_slack_length>
				<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
				<pennation_angle_at_optimal>0.13962634016</pennation_angle_at_optimal>
				<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
				<max_contraction_velocity>10</max_contraction_velocity>
				<!--Assumed activation level if none is assigned.-->
				<default_activation>1</default_activation>
			</Thelen2003Muscle>
		</defaults>
		<!--The model's ground reference frame.-->
		<Ground name="ground">
			<!--The geometry used to display the axes of this Frame.-->
			<FrameGeometry name="frame_geometry">
				<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
				<socket_frame_connectee_name>..</socket_frame_connectee_name>
				<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
				<input_transform_connectee_name></input_transform_connectee_name>
				<!--Scale factors in X, Y, Z directions respectively.-->
				<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
			</FrameGeometry>
		</Ground>
		<!--Acceleration due to gravity, expressed in ground.-->
		<gravity>0 0 -9.8000000000000007</gravity>
		<!--List of bodies that make up this model.-->
		<BodySet>
			<objects>
				<Body name="thorax">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="thorax_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.99706899999999998 0.99706899999999998 0.99706899999999998</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>thorax.vtp</mesh_file>
						</Mesh>
						<Mesh name="thorax_geom_2">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.99706899999999998 0.99706899999999998 0.99706899999999998</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>hat_spine.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects>
							<WrapCylinder name="SpineCyl">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.5700000000000001 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.046762499999999999 0.0898259 0.018146700000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0149560313425994</radius>
								<!--The length of the cylinder.-->
								<length>0.079765500493863398</length>
							</WrapCylinder>
							<WrapCylinder name="SpineCyl2">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>false</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.5700000000000001 -1.2 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.046762499999999999 0.030001799999999999 0.023929700000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.019941375123465801</radius>
								<!--The length of the cylinder.-->
								<length>0.14956031342599399</length>
							</WrapCylinder>
							<WrapCylinder name="SpineCyl3">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.5700000000000001 -0.20999999999999999 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.085648199999999994 -0.074869900000000003 0.023929700000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.019941375123465801</radius>
								<!--The length of the cylinder.-->
								<length>0.18944306367292599</length>
							</WrapCylinder>
							<WrapCylinder name="SpineCyl_t1">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.5700000000000001 -1.2 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.046762499999999999 0.011964799999999999 0.023929700000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.019941375123465801</radius>
								<!--The length of the cylinder.-->
								<length>0.14956031342599399</length>
							</WrapCylinder>
							<WrapEllipsoid name="Thorax">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0.043458700000000003 -0.33196199999999998 0.18989200000000001</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.038486899999999998 -0.12692700000000001 0.070692199999999997</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0997069 0.134604 0.0997069</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="ThoraxSRA">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 -0.33196199999999998 0.13989199999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.038486899999999998 -0.093026499999999998 0.064809500000000006</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0498534 0.0997069 0.0648095</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="ThoraxSRA2">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 -0.43196200000000001 0.13989199999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.025524999999999999 -0.116956 0.084750800000000001</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0747802 0.109678 0.0648095</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="ThoraxLAT">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 -0.43196200000000001 0.13989199999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.033501499999999997 -0.14258100000000001 0.064809500000000006</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0747802 0.109678 0.0648095</dimensions>
							</WrapEllipsoid>
						</objects>
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>20</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>-0.0299121 0.31906200000000001 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>1.46587 0.75107699999999999 1.42302 0 0 0</inertia>
				</Body>
				<Body name="clavicle">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="clavicle_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.96219699999999997 0.96219699999999997 0.96219699999999997</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>clavicle.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--The mass of the body (kg)-->
					<mass>0.20000000000000001</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>-0.0122396 0.0081742499999999992 0.063490199999999997</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0 0 0 0 0 0</inertia>
				</Body>
				<Body name="scapula">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="scapula_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>1.1480900000000001 1.1480900000000001 1.1480900000000001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>scapula.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects>
							<WrapTorus name="INFSP">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>false</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0.025307300000000001 0.58835000000000004 0.15184400000000001</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.064408000000000007 -0.022847099999999999 -0.0128586</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.0091847482259526502</inner_radius>
								<outer_radius>0.021813777036637599</outer_radius>
							</WrapTorus>
							<WrapEllipsoid name="TMIN">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-2.09754 -0.28082299999999999 -1.7634799999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.0479903 -0.059586100000000003 -0.041216599999999999</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0344428 0.0344428 0.0574047</dimensions>
							</WrapEllipsoid>
							<WrapCylinder name="TRIlongglen">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.3753200000000001 -0.29461199999999999 2.4359600000000001</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.041216599999999999 -0.035476100000000003 -0.0151548</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0034442805847322401</radius>
								<!--The length of the cylinder.-->
								<length>0.0344428058473224</length>
							</WrapCylinder>
						</objects>
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>0.5</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>-0.082662700000000006 -0.044775599999999999 -0.074626100000000001</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0 0 0 0 0 0</inertia>
				</Body>
				<Body name="glenoid">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--The mass of the body (kg)-->
					<mass>0</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 0 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0 0 0 0 0 0</inertia>
				</Body>
				<Body name="humerus">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="humerus_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.99706899999999998 0.99706899999999998 0.99706899999999998</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>humerus.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects>
							<WrapTorus name="WP_humerus_torus_BICl">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 0.80000000000000004 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0 0.025000000000000001 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>true</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.20000000000000001</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>2</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.023</inner_radius>
								<outer_radius>0.030</outer_radius>
							</WrapTorus>
							<WrapTorus name="WP_humerus_torus_middle">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.5700000000000001 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0 -0.10000000000000001 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>1</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.025000000000000001</inner_radius>
								<outer_radius>0.050000000000000003</outer_radius>
							</WrapTorus>
							<WrapEllipsoid name="SUPSP">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0.038048199999999997 0.0085521099999999999 -1.3067299999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.000199414 0.0076774299999999998 0.0042874000000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0199414 0.0199414 0.0199414</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="INFSP_and_TMIN_hum_head">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.28658299999999998 -0.0090757100000000007 -0.068416900000000003</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.00029912100000000001 0.00259238 0.0037888599999999998</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0199414 0.0249267 0.0199414</dimensions>
							</WrapEllipsoid>
							<WrapCylinder name="TMINhum">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.75353 0.069289600000000007 2.7462800000000001</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.0013959 -0.0453666 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0069794812932130502</radius>
								<!--The length of the cylinder.-->
								<length>0.069794812932130496</length>
							</WrapCylinder>
							<WrapSphere name="TMAJ_LAT_PEC_CORBhh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.00029912100000000001 -0.0089736199999999999 0.0059824099999999996</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<radius>0.024428184526245698</radius>
							</WrapSphere>
							<WrapCylinder name="TMAJ_LAThum">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.5364100000000001 -0.063704499999999997 1.4142399999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.00069794799999999999 -0.044170099999999997 -0.00548388</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0069794812932130502</radius>
								<!--The length of the cylinder.-->
								<length>0.039882750246931699</length>
							</WrapCylinder>
							<WrapEllipsoid name="PEC1hh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.62046500000000004 -0.31049399999999999 0.36372700000000002</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.00368915 0.00049853400000000002 -0.0024926700000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0299121 0.0199414 0.0199414</dimensions>
							</WrapEllipsoid>
							<WrapCylinder name="PEC12hum">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.55928 -0.077492599999999995 -0.92589699999999997</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0019941400000000001 -0.050651099999999998 -0.00169502</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0089736188055596303</radius>
								<!--The length of the cylinder.-->
								<length>0.069794812932130496</length>
							</WrapCylinder>
							<WrapSphere name="PEC23hh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.0085747900000000005 0.00209384 -0.000398828</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<radius>0.019941375123465801</radius>
							</WrapSphere>
							<WrapCylinder name="PEC3hum">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.4409400000000001 -0.056199600000000002 1.75196</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.00089736199999999996 -0.054938500000000001 -0.000398828</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0079765500493863394</radius>
								<!--The length of the cylinder.-->
								<length>0.069794812932130496</length>
							</WrapCylinder>
							<WrapCylinder name="LAT_TMAJhh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.30508400000000002 -0.018325999999999999 -0.68661300000000003</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.022334300000000001 0.0101701 0.0093724499999999992</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-y</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0069794812932130502</radius>
								<!--The length of the cylinder.-->
								<length>0.044868094027798198</length>
							</WrapCylinder>
							<WrapSphere name="LAT_TMAJ2hh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.12723499999999999 0.276111 0.019722199999999999</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.00159531 0.0091730300000000004 0.0051847600000000001</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-z</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<radius>0.0299120626851988</radius>
							</WrapSphere>
							<WrapCylinder name="CORBhum">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-1.60832 0.095993099999999998 0.87528300000000003</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0026920899999999998 -0.119848 -0.0058827100000000002</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.0079765500493863394</radius>
								<!--The length of the cylinder.-->
								<length>0.049853437808664601</length>
							</WrapCylinder>
							<WrapEllipsoid name="TRIlonghh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>3.00162 -0.85346599999999995 2.5741900000000002</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.0077771400000000001 -0.0040879799999999997 -0.0013959</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>z</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0348974 0.0199414 0.0199414</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="WP_humerus_TRIlonghh">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.02 -0.22 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.04 0.05 0.07</dimensions>
							</WrapEllipsoid>
							<WrapCylinder name="TRI">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.14015 -0.0062831900000000001 0.15498500000000001</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0027917900000000002 -0.29104400000000002 -0.0118651</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.017999999999999999</radius>
								<!--The length of the cylinder.-->
								<length>0.039882750246931699</length>
							</WrapCylinder>
							<WrapEllipsoid name="ANC">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0.00750492 -0.19669900000000001 1.0492900000000001</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0133607 -0.28526099999999999 -0.00079765499999999998</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0199414 0.0199414 0.0199414</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="BIClong">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-2.00434 -1.0016400000000001 0.97546500000000003</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0032903300000000002 0.0072785999999999997 0.00029912100000000001</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>-y</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0249267 0.0199414 0.0199414</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="Elbow_BIC_BRD">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.128631 0.13753199999999999 0.0307178</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0018944299999999999 -0.28815299999999999 -0.013958999999999999</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.014956 0.014956 0.0997069</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="Elbow_PT_ECRL">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.16109399999999999 -0.110828 0.61453000000000002</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0029912099999999998 -0.286358 -0.0068797700000000003</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>x</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.0179472 0.0249267 0.0348974</dimensions>
							</WrapEllipsoid>
						</objects>
						<groups />
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>2.0325000000000002</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 -0.16402 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0.011876100000000001 0.0040968799999999998 0.0133305 0 0 0</inertia>
				</Body>
				<Body name="ulna">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="ulna_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>1.0212600000000001 1.0212600000000001 1.0212600000000001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>ulna.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects>
							<WrapCylinder name="WP_ulna_TRI">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-0.014999999999999999 -0.025000000000000001 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0 0 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<!--The radius of the cylinder.-->
								<radius>0.025000000000000001</radius>
								<!--The length of the cylinder.-->
								<length>0.040000000000000001</length>
							</WrapCylinder>
						</objects>
						<groups />
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>0.60750000000000004</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 -0.123087 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0.0030892799999999998 0.000644555 0.0033510599999999999 0 0 0</inertia>
				</Body>
				<Body name="radius">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="radius_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>1.0212600000000001 1.0212600000000001 1.0212600000000001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>radius.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects />
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>0.60750000000000004</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 -0.123087 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0.0030892799999999998 0.000644555 0.0033510599999999999 0 0 0</inertia>
				</Body>
				<Body name="hand_r">
					<!--List of components that this component owns and serializes.-->
					<components>
						<PhysicalOffsetFrame name="hand_r_geom_frame_1">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_1">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>pisiform.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.013388000000000001 -0.0098860000000000007 -0.010593</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_3">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_3">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>scaphoid.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.012345 -0.0044640000000000001 -0.0012539999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_4">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_4">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>triquetrum.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.010784 -0.0074989999999999996 -0.001289</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_5">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_5">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>hamate.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.0069769999999999997 -0.017548999999999999 0.0015770000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_6">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_6">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>capitate.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0039919999999999999 -0.015054 0.0023270000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_7">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_7">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>trapezoid.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.013135000000000001 -0.019116000000000001 -0.000137</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_8">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_8">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>trapezium.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.019285 -0.019623000000000002 -0.0079810000000000002</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_9">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_9">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>1mc.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.026485000000000002 -0.025023 -0.010481000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_10">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_10">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>2mc.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.018676999999999999 -0.052673999999999999 0.0073590000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_11">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_11">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>3mc.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0044689999999999999 -0.054293000000000001 0.0097040000000000008</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_12">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_12">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>4mc.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.0080540000000000004 -0.055572999999999997 0.0058399999999999997</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_13">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_13">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>5mc.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.017904 -0.049737000000000003 -0.0018910000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_14">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_14">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>thumbprox.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.042985000000000002 -0.054223 -0.023181</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_15">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_15">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>thumbdist.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.056985000000000001 -0.080123 -0.033280999999999998</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_16">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_16">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>2proxph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.022178 -0.080917000000000003 0.010978999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_17">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_17">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>2midph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.029694999999999999 -0.12218999999999999 0.018304999999999998</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_18">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_18">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>2distph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.033028000000000002 -0.14707799999999999 0.019525000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_19">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_19">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>3proxph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0047089999999999996 -0.080583000000000002 0.011481999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_20">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_20">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>3midph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0063590000000000001 -0.124794 0.017711999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_21">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_21">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>3distph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.007724 -0.15384100000000001 0.019665999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_22">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_22">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>4proxph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.0098840000000000004 -0.079261999999999999 0.0056670000000000002</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_23">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_23">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>4midph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.013412 -0.119517 0.007012</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_24">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_24">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>4distph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.015729 -0.14430599999999999 0.0075750000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_25">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_25">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>5proxph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.019501000000000001 -0.071167999999999995 -0.0033869999999999998</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_26">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_26">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>5midph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.02478 -0.10673100000000001 -0.0062659999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="hand_r_geom_frame_27">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
							<attached_geometry>
								<Mesh name="hand_r_geom_27">
									<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
									<socket_frame_connectee_name>..</socket_frame_connectee_name>
									<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
									<input_transform_connectee_name></input_transform_connectee_name>
									<!--Scale factors in X, Y, Z directions respectively.-->
									<scale_factors>1 1 1</scale_factors>
									<!--Default appearance attributes for this Geometry-->
									<Appearance>
										<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
										<opacity>1</opacity>
										<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
										<color>1 1 1</color>
									</Appearance>
									<!--Name of geometry file.-->
									<mesh_file>5distph.vtp</mesh_file>
								</Mesh>
							</attached_geometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>..</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.027650999999999998 -0.12740799999999999 -0.0085089999999999992</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0 0 -0</orientation>
						</PhysicalOffsetFrame>
					</components>
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="hand_r_geom_2">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>1 1 1</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>lunate.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects>
							<WrapTorus name="ECRL">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.53833 0.234398 0.73111800000000005</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.022200000000000001 -0.0095999999999999992 0.020799999999999999</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.0080000000000000002</inner_radius>
								<outer_radius>0.016</outer_radius>
							</WrapTorus>
							<WrapTorus name="ECRB">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>1.3126599999999999 -0.11781 -0.116239</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0126 -0.0094999999999999998 0.018599999999999998</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.0080000000000000002</inner_radius>
								<outer_radius>0.01</outer_radius>
							</WrapTorus>
							<WrapTorus name="FCR">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-1.55596 -0.15323999999999999 -0.100007</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0.0032000000000000002 -0.0044999999999999997 -0.019</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.001</inner_radius>
								<outer_radius>0.0025000000000000001</outer_radius>
							</WrapTorus>
							<WrapTorus name="FCU">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>-1.57376 -0.079761600000000002 0.39234999999999998</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>-0.0123 -0.0124 -0.017100000000000001</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<inner_radius>0.0067999999999999996</inner_radius>
								<outer_radius>0.0080000000000000002</outer_radius>
							</WrapTorus>
						</objects>
						<groups />
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>0.45750000000000002</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 -0.068095000000000003 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>0.000892 0.00054699999999999996 0.00134 0 0 0</inertia>
				</Body>
			</objects>
		</BodySet>
		<!--List of joints that connect the bodies.-->
		<JointSet>
			<objects>
				<CustomJoint name="ground_thorax">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>ground_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../thorax</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="thorax_tilt">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.5708 1.5708</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="thorax_list">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.5708 1.5708</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="thorax_rotation">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.5708 1.5708</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="thorax_tx">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-20 20</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="thorax_ty">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-2 4</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="thorax_tz">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-5 5</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="ground_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../ground</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0 0 0</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>1.5708 3.1515900000000001 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>thorax_tilt</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>thorax_list</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>thorax_rotation</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>thorax_tx</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<LinearFunction>
										<coefficients> 1 0</coefficients>
									</LinearFunction>
								</function>
								<scale>1</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>thorax_ty</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<LinearFunction>
										<coefficients> 1 0</coefficients>
									</LinearFunction>
								</function>
								<scale>1</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>thorax_tz</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<LinearFunction>
										<coefficients> 1 0</coefficients>
									</LinearFunction>
								</function>
								<scale>1</scale>
							</MultiplierFunction>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<CustomJoint name="SCJ">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>thorax_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../clavicle</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="sternoclavicular_r1">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="sternoclavicular_r2">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="sternoclavicular_r3">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>true</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="thorax_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../thorax</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0063064599999999998 0.0069096899999999996 0.0253904</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0 0 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>sternoclavicular_r1</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0.015299995323 0.98929869757099997 -0.14509995564299999</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>sternoclavicular_r2</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>-0.994472543667 0 -0.10499695182</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>sternoclavicular_r3</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>-0.103812017405 0.14541602438000001 0.98390916496199998</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.99706875617329205</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.99706875617329205</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.99706875617329205</scale>
							</MultiplierFunction>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<CustomJoint name="ACJ">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>clavicle_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>scapula_offset</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="Acromioclavicular_r1">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="Acromioclavicular_r2">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="Acromioclavicular_r3">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="clavicle_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../clavicle</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.0137883 0.0193113 0.130411</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0.52000000000000002 0.52000000000000002 0</orientation>
						</PhysicalOffsetFrame>
						<PhysicalOffsetFrame name="scapula_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../scapula</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0 0 0</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>-0.52000000000000002 0.52000000000000002 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>Acromioclavicular_r1</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>Acromioclavicular_r2</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>Acromioclavicular_r3</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>-1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.96219650662001699</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.96219650662001699</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.96219650662001699</scale>
							</MultiplierFunction>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<WeldJoint name="scap2glen">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>scapula_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../glenoid</socket_child_frame_connectee_name>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="scapula_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../scapula</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.024424999999999999 -0.037754999999999997 -0.016365000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0.074800000000000005 0.53269999999999995 -0.79910000000000003</orientation>
						</PhysicalOffsetFrame>
					</frames>
				</WeldJoint>
				<CustomJoint name="GHJ">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>glenoid_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../humerus</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="shoulder_plane">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>-1.5708</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>5.3429242439434002e-15</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-3 0.34999999999999998</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="shoulder_ele">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.29999999999999999 3</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="shoulder_rotation">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>1.5708</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>1.00020870681876e-14</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>0 3</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="glenoid_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../glenoid</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>-0.0018910000000000001 -0.00091399999999999999 0.029853000000000001</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0 0 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>shoulder_plane</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0.0001 1 0.0001</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>shoulder_ele</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>shoulder_rotation</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>1.1480935282440801</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>1.1480935282440801</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>1.1480935282440801</scale>
							</MultiplierFunction>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<CustomJoint name="elbow">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>humerus_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../ulna</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="elbow_flexion">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>0 3</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="humerus_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../humerus</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0060821199999999999 -0.289549 -0.012263899999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0 0 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>elbow_flexion</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0.049400012357999998 0.036600009156 0.998108249695</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.99706875617329205</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.99706875617329205</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>0.99706875617329205</scale>
							</MultiplierFunction>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<CustomJoint name="radioulnar">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>ulna_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../radius</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="pro_sup">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.570796326795 1.570796326795</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="ulna_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../ulna</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.00040850400000000002 -0.011747499999999999 0.0204242</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0 0 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>pro_sup</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>-0.017160993842 0.99266564378199995 -0.11966795705699999</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>1.0212589808830199</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>1.0212589808830199</scale>
							</MultiplierFunction>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<MultiplierFunction name="function">
								<function>
									<Constant>
										<value>0</value>
									</Constant>
								</function>
								<scale>1.0212589808830199</scale>
							</MultiplierFunction>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<CustomJoint name="radius_hand_r">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>radius_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../hand_r</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="hand_r_Add">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1.2 1.2</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="hand_r_Flex">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-1 1</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>true</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="radius_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../radius</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0.0174787 -0.23499200000000001 0.024275999999999999</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0 0 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>hand_r_Add</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>hand_r_Flex</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
			</objects>
		</JointSet>
		<!--Controllers that provide the control inputs for Actuators.-->
		<ControllerSet>
			<objects />
			<groups />
		</ControllerSet>
		<!--Constraints in the model.-->
		<ConstraintSet>
			<objects />
		</ConstraintSet>
		<!--Forces in the model (includes Actuators).-->
		<ForceSet>
			<objects>
				<Thelen2003Muscle name="LVS">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="LVS-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.037153800000000001 0.094160999999999995 0.0224777</location>
								</PathPoint>
								<PathPoint name="LVS-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.077665200000000004 0.00077190500000000003 -0.109819</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>169.95639725599801</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.143731700550492</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0050820046023458297</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="TRP1">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="TRP1-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.058787300000000001 0.096565899999999996 0.00191913</location>
								</PathPoint>
								<PathPoint name="TRP1-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../clavicle</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.029441100000000001 0.0239066 0.094542399999999999</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SpineCyl</wrap_object>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>280.56713981164</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.101372097423046</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.015184065205996701</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="TRP2">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="TRP2-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.077244999999999994 0.0313656 0.0035586699999999999</location>
								</PathPoint>
								<PathPoint name="TRP2-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.044775599999999999 -0.0029640299999999999 -0.0114809</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SpineCyl2</wrap_object>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>162.449964047061</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.083719936652882299</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.042012560156904903</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="TRP3">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="TRP3-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.091895400000000002 -0.0153597 0.0024986700000000001</location>
								</PathPoint>
								<PathPoint name="TRP3-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.066984399999999999 -0.0074735599999999998 -0.050993400000000001</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>155.28316683500699</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.072466067613824001</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.017628862904662802</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="TRP4">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="TRP4-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.11564099999999999 -0.105255 0.00068162099999999998</location>
								</PathPoint>
								<PathPoint name="TRP4-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.090919700000000006 -0.0148608 -0.090584700000000004</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SpineCyl3</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>557.24345537557701</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.116791618177899</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0045546041716623504</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="RMN">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RMN-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.062815300000000004 0.055797699999999999 0.0029912099999999998</location>
								</PathPoint>
								<PathPoint name="RMN-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.090764800000000007 -0.015101099999999999 -0.115107</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SpineCyl2</wrap_object>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>301.61706145578802</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.097251715867539196</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0208249899666898</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="RMJ1">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RMJ1-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0788272 0.0094123699999999998 0.00142958</location>
								</PathPoint>
								<PathPoint name="RMJ1-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.10372099999999999 -0.048523499999999997 -0.119606</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SpineCyl3</wrap_object>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>185.935898822876</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.078750744769800096</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.021684415918741099</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="RMJ2">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RMJ2-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.086745000000000003 -0.0249267 0.00142958</location>
								</PathPoint>
								<PathPoint name="RMJ2-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.11480899999999999 -0.113661 -0.11136500000000001</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SpineCyl3</wrap_object>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>111.570078855478</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.090393014453169704</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.047155270070094797</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="SRA1">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="SRA1-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.00094126400000000003 -0.056001700000000001 0.119468</location>
								</PathPoint>
								<PathPoint name="SRA1-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.10086000000000001 -0.054243399999999997 -0.113174</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>ThoraxSRA</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>365.11775335508798</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.100783524139595</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.082558823199284398</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="SRA2">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="SRA2-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.00062408799999999996 -0.101712 0.13742099999999999</location>
								</PathPoint>
								<PathPoint name="SRA2-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.106888 -0.071514900000000006 -0.113108</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>ThoraxSRA</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>179.96260532400399</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.143744234495054</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.047256090103322698</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="SRA3">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="SRA3-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.011340100000000001 -0.16134299999999999 0.14843200000000001</location>
								</PathPoint>
								<PathPoint name="SRA3-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.111231 -0.088884000000000005 -0.112791</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>ThoraxSRA2</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>377.92166433725902</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.14171245457592699</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0093223680884982098</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="SBCL">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="SBCL-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.000925142 -0.0131603 0.039011499999999998</location>
								</PathPoint>
								<PathPoint name="SBCL-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../clavicle</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0151524 0.0087419999999999998 0.072847200000000001</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>195.80764894274199</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.023171019023900001</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.042247568995307003</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="PMN">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="PMN-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.032349900000000001 -0.074858099999999997 0.089155999999999999</location>
								</PathPoint>
								<PathPoint name="PMN-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0137771 -0.047381800000000002 -0.030447399999999999</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>218.72293530659101</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.099341188986123402</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0043165675121904397</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="DELT1">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="DELT1-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../clavicle</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.023254799999999999 0.018555200000000001 0.095271900000000007</location>
								</PathPoint>
								<PathPoint name="DELT1-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../clavicle</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0022195399999999999 0.0303141 0.12567999999999999</location>
								</PathPoint>
								<PathPoint name="DELT1-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0045457500000000003 -0.103644 0.0077324300000000002</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>556.79999999999995</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.177910005053001</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.031784150446112699</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.383972435439</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="DELT2">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="DELT2-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.031606299999999997 -0.0036764300000000001 0.0016375700000000001</location>
								</PathPoint>
								<PathPoint name="DELT2-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.031735699999999999 -0.00555618 0.0210803</location>
								</PathPoint>
								<PathPoint name="DELT2-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0034899900000000001 -0.057778000000000003 0.028278000000000001</location>
								</PathPoint>
								<PathPoint name="DELT2-P4">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0045457500000000003 -0.103644 0.0077324300000000002</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>1098.4000000000001</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.13724674129939601</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.048629915164505398</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.26179938779900003</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="DELT3">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="DELT3-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.067809300000000003 -0.0018010299999999999 -0.044156399999999998</location>
								</PathPoint>
								<PathPoint name="DELT3-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0828787 -0.027232900000000001 0.0068624799999999998</location>
								</PathPoint>
								<PathPoint name="DELT3-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.018530000000000001 -0.049556299999999998 0.0058833399999999999</location>
								</PathPoint>
								<PathPoint name="DELT3-P4">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0045457500000000003 -0.103644 0.0077324300000000002</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>944.70000000000005</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.13230621500511799</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.105047686995106</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.31415926535900002</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="SUPSP">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="SUPSP-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.076967999999999995 -0.0133058 -0.074049000000000004</location>
								</PathPoint>
								<PathPoint name="SUPSP-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.064499500000000001 -0.0015351 -0.046731799999999997</location>
								</PathPoint>
								<PathPoint name="SUPSP-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0035553500000000001 0.031139799999999999 0.0055013299999999996</location>
								</PathPoint>
								<PathPoint name="SUPSP-P4">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.014213099999999999 0.016794900000000001 0.020882399999999999</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>SUPSP</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>410.69999999999999</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.129763403133517</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.027623454057607098</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.12217304764</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="INFSP">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="INFSP-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.10101499999999999 -0.062631699999999998 -0.079624</location>
								</PathPoint>
								<PathPoint name="INFSP-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.048982100000000001 -0.055665899999999997 -0.025148899999999998</location>
								</PathPoint>
								<PathPoint name="INFSP-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0050826300000000003 0.0080172999999999998 0.0263193</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>INFSP</wrap_object>
								</PathWrap>
								<PathWrap name="pathwrap_0">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>INFSP_and_TMIN_hum_head</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>864.60000000000002</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.14804083334427101</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.037709569793665403</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.32288591161899999</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="SUBSC">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="SUBSC-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.082662700000000006 -0.044775599999999999 -0.074626100000000001</location>
								</PathPoint>
								<PathPoint name="SUBSC-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.044900599999999999 -0.037069600000000001 -0.0383135</location>
								</PathPoint>
								<PathPoint name="SUBSC-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0074096500000000003 0.0103442 -0.022619</location>
								</PathPoint>
								<PathPoint name="SUBSC-P4">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.019940900000000001 -0.0082873700000000005 -0.0017436000000000001</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>944.29999999999995</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.181640690467335</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0083474582016238308</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.34906585039900001</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="TMIN">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="TMIN-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.094144099999999994 -0.077474600000000005 -0.046992199999999998</location>
								</PathPoint>
								<PathPoint name="TMIN-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.086128700000000002 -0.060448000000000002 -0.011788399999999999</location>
								</PathPoint>
								<PathPoint name="TMIN-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0084524600000000002 -0.014135200000000001 0.026806099999999999</location>
								</PathPoint>
								<PathPoint name="TMIN-P4">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0065371099999999996 -0.0036434599999999998 0.021614600000000001</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>605.39999999999998</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.050520272237396503</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.115761683404895</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.418879020479</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="TMAJ">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="TMAJ-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.120216 -0.12371500000000001 -0.081693199999999994</location>
								</PathPoint>
								<PathPoint name="TMAJ-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.052068200000000002 -0.121946 -0.0028375499999999999</location>
								</PathPoint>
								<PathPoint name="TMAJ-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0036881599999999998 -0.044868100000000001 -0.0067432200000000003</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>234.90000000000001</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.163131932244024</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.063113723065591307</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.27925268031900002</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="PECM1">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="PECM1-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../clavicle</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0010636300000000001 0.0058533700000000001 0.0493812</location>
								</PathPoint>
								<PathPoint name="PECM1-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../clavicle</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.00046746199999999998 0.0053598099999999996 0.056924000000000002</location>
								</PathPoint>
								<PathPoint name="PECM1-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.015953100000000001 -0.040377000000000003 0.0049853400000000004</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<!--All properties of this object have their default values.-->
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>983.39999999999998</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.103911818135664</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.048661144102554801</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.29670597283900002</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="PECM2">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="PECM2-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0247929 -0.047443699999999998 0.017415199999999999</location>
								</PathPoint>
								<PathPoint name="PECM2-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0421932 -0.043343800000000002 0.080575599999999997</location>
								</PathPoint>
								<PathPoint name="PECM2-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.015953100000000001 -0.035391699999999998 0.0049853400000000004</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>699.70000000000005</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.13751460503087001</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.093804605574629302</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.43633231299899999</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="PECM3">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="PECM3-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.062470600000000001 -0.14732600000000001 0.021995500000000001</location>
								</PathPoint>
								<PathPoint name="PECM3-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.043141400000000003 -0.092788200000000001 0.082590200000000003</location>
								</PathPoint>
								<PathPoint name="PECM3-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.015953100000000001 -0.0299121 0.0049853400000000004</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>446.69999999999999</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.17625197259630701</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.096049061734777397</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.43633231299899999</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="LAT">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="LAT-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../thorax</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.094424400000000006 -0.160526 0.00051064299999999997</location>
								</PathPoint>
								<PathPoint name="LAT-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0020154000000000001 -0.018835399999999999 -0.0214022</location>
								</PathPoint>
								<PathPoint name="LAT-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.00988845 -0.022268199999999998 -0.0087961399999999992</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>ThoraxLAT</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>1129.7</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.226108380105393</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.075141757738952195</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.33161255787900001</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="CORB">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="CORB-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0143512 -0.047381800000000002 -0.030447399999999999</location>
								</PathPoint>
								<PathPoint name="CORB-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0 -0.12762499999999999 -0.0116252</location>
								</PathPoint>
							</objects>
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>CORBhum</wrap_object>
								</PathWrap>
								<PathWrap name="pathwrap_0">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>TMAJ_LAT_PEC_CORBhh</wrap_object>
								</PathWrap>
							</objects>
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--Flag indicating whether the associated Geometry is visible or hidden.-->
							<visible>false</visible>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>306.89999999999998</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.083431382459823303</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.061671033909605003</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="bic_l">
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="bic_l-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.013599999999999999 -0.025100000000000001 -0.0218</location>
								</PathPoint>
								<PathPoint name="bic_l-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.014999999999999999 0.01 0.014999999999999999</location>
								</PathPoint>
								<PathPoint name="bic_l-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../radius</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.00091399999999999999 -0.037638999999999999 -0.003846</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>WP_humerus_torus_BICl</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 2</range>
								</PathWrap>
								<PathWrap name="pathwrap_0">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>WP_humerus_torus_middle</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>2 3</range>
								</PathWrap>
								<PathWrap name="pathwrap_1">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>Elbow_BIC_BRD</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>700</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.14469879283957901</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.26151058922632903</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="bic_b">
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="bic_b-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.011820000000000001 -0.040939999999999997 -0.024830000000000001</location>
								</PathPoint>
								<PathPoint name="bic_b-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../radius</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.00091399999999999999 -0.037638999999999999 -0.003846</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>WP_humerus_torus_middle</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
								<PathWrap name="pathwrap_0">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>Elbow_BIC_BRD</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>894</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.1308</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.2165</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
				</Thelen2003Muscle>
				<Thelen2003Muscle name="tric_long">
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="tric_long-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../scapula</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.045508 -0.044998000000000003 -0.011820000000000001</location>
								</PathPoint>
								<PathPoint name="tric_long-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../humerus</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.022605 -0.28000000000000003 -0.0145687</location>
								</PathPoint>
								<PathPoint name="tric_long-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ulna</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.027813999999999998 -0.0091280000000000007 -0.00083900000000000001</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>TRIlonghh</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
								<PathWrap name="pathwrap_0">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>WP_ulna_TRI</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>hybrid</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>2216</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.1167</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.23380000000000001</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0.17453293</pennation_angle_at_optimal>
				</Thelen2003Muscle>
			</objects>
			<groups>
				<ObjectGroup name="new_Mick">
					<members> bic_l bic_b tric_long</members>
				</ObjectGroup>
				<ObjectGroup name="Scapulothoracic">
					<members> SBCL SRA1 SRA2 SRA3 TRP1 TRP2 TRP3 TRP4 LVS RMN RMJ1 RMJ2 PMN</members>
				</ObjectGroup>
				<ObjectGroup name="Glenohumeral">
					<members> DELT1 DELT2 DELT3 INFSP LAT PECM1 PECM2 PECM3 SUBSC SUPSP TMAJ TMIN CORB</members>
				</ObjectGroup>
			</groups>
		</ForceSet>
		<!--Markers in the model.-->
		<MarkerSet>
			<objects>
				<Marker name="STER">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../thorax</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.036008199999999997 -0.036642899999999999 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="STERl">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../thorax</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.0153393 -0.014110599999999999 -0.021437600000000001</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="STERr">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../thorax</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.0153393 -0.014110599999999999 0.021437600000000001</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="XIPH">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../thorax</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.0725137 -0.17499999999999999 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="T10">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../thorax</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.11700000000000001 -0.17499999999999999 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="T1">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../thorax</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.115 -0.036642899999999999 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="CLAV_SC">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../clavicle</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0 0 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="CLAV_AC">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../clavicle</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.019036000000000001 0.0219355 0.120411</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAP_IA">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.13204299999999999 -0.143512 -0.090699399999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAP_RS">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.104647 -0.0145433 -0.11171200000000001</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAP_AA">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.058791599999999999 -0.0063625399999999999 0.0110066</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAP_CP">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.021105599999999999 -0.047899499999999998 -0.028669799999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAP_SA">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.073926400000000003 0.0406592 -0.097145099999999998</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAPl">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.072198700000000005 -0.0075398000000000001 -0.0200538</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="SCAPm">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../scapula</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.093680200000000005 -0.0071487599999999997 -0.060007600000000001</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="EPICl">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.0015865899999999999 -0.284165 0.0261137</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="EPICm">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.0044826099999999997 -0.27917900000000001 -0.053106199999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="DELT">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.016933 -0.118876 0.036468100000000003</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="ARMp_up">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.049728700000000001 -0.174094 0.021342199999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="ARMl">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.021405 -0.14588400000000001 0.046927799999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="ARMm">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.013566999999999999 -0.20316100000000001 -0.040194199999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="ARMp_do">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../humerus</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.045668800000000002 -0.227576 0.0044353600000000002</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="LARMm">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../ulna</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.022137 -0.091579199999999999 0.0208414</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="LARMl">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../ulna</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.035710600000000002 -0.090340900000000002 0.063495700000000002</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="LARM_ant">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../radius</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.038534400000000003 -0.14008799999999999 0.022984500000000001</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="STYLr_up">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../radius</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.040739699999999997 -0.19977700000000001 0.036122099999999997</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="STYLr">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../radius</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.055782699999999998 -0.230296 0.023501299999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="STYLu">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../radius</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.013148 -0.231687 0.034842699999999997</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="LARM_elb">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../ulna</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.037776400000000002 -0.0052508399999999997 0.0060122400000000003</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="LATH">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../hand_r</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.017874000000000001 -0.031695899999999999 0.0218251</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="LASTC">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../hand_r</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.021084800000000001 -0.069800699999999993 0.0129684</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="MEDH">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../hand_r</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>-0.0194545 -0.029831 0.012708199999999999</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="WRIST">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../radius</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.0174787 -0.20336699999999999 0.0390625</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="INDEX">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../hand_r</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.017918400000000001 -0.076669200000000007 0.0230373</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
			</objects>
		</MarkerSet>
	</Model>
</OpenSimDocument>
